#!/usr/bin/env python3
#This script was generated by the AMUSE framework
import os
import subprocess
import sys


def amuse_root_dir():
    """Returns the AMUSE root directory.

    This shouldn't be needed at runtime, so possibly more needs to happen to
    make the existing Java codes work in a packaged environment, but for now
    no one seems to be using distributed AMUSE or asterisk anyway, so we'll
    leave it for the time being - LV.
    """
    return os.path.abspath(os.path.join(os.path.dirname(__file__), "../../"))


def code_dir():
    """Returns the code dir.

    Assumes that this script is in the AMUSE source tree.
    """
    return os.path.dirname(os.path.abspath(__file__))


def classpath():
    """Return a classpath string for the worker.

    This assumes that this script is in amuse/community/<code>, and that any
    classpath settings needed are specified in the interface class as paths
    relative to amuse/community/<code>.
    """
    base = code_dir()
    classpath = [
            os.path.join(base, rel_path)
            for rel_path in "{classpath}".split(":")]

    return ":".join(classpath)


def main():
    ard = amuse_root_dir()
    cd = code_dir()
    cp = classpath()

    print("Starting Java code")
    print("  with code_dir : {{0}}".format(cd))
    print("  with classpath: {{0}}".format(cp))
    sys.stdout.flush()

    arguments = ["java", "-Damuse.root.dir=" + ard, "-Dcode.dir=" + cd, "-cp", cp, "Worker"]
    arguments.extend(sys.argv[1:])

    subprocess.call(arguments)

if __name__ == "__main__":
    main()
