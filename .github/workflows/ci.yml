# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  push:
    branches:
     - main
  pull_request:
    branches:
     - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        mpi:
          - mpich
          - openmpi
        os:
          # - ubuntu-22.04
          - ubuntu-20.04
          # macOS is not ready yet - needs other setup of prerequisites
          # - macos-12
          # - macos-11
        python:
          - 3.7

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup MPI
      id:   setup-mpi
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Show MPI name
      run:  echo "${{ steps.setup-mpi.outputs.mpi }}"

    - name: Show MPI info
      run:  mpichversion
      if:   ${{ matrix.mpi == 'mpich' }}

    - name: Show MPI info
      run:  ompi_info
      if:   ${{ matrix.mpi == 'openmpi' }}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '17'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install gfortran libopenblas-dev libhdf5-openmpi-dev libgsl0-dev cmake libfftw3-3 libfftw3-dev libmpfr6 libmpfr-dev
        pip install numpy scipy matplotlib docutils mpi4py pytest pytest-timeout
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install amuse
      run: |
        pip install -e .
        ./configure

    - name: build AMUSE framework
      run: |
        make framework

    - name: build SSE and BHTree
      run: |
        make sse.code bhtree.code

    - name: check installation
      run: |
        amusifier --get-amuse-configmk
        pip list

    - name: move build log
      run: |
        mv build.log build-${{ matrix.mpi }}-${{ matrix.python }}.log
    - name: archive build log
      uses: actions/upload-artifact@v4
      with:
          name: buildlog-${{ matrix.mpi }}-${{ matrix.python }}
          path: build-${{ matrix.mpi }}-${{ matrix.python }}.log

    - name: test core_tests
      run: |
        pytest --pyargs amuse.test.suite.core_tests -s

    - name: test compile_tests
      run: |
        ip link show
        echo $OMPI_MCA_btl_tcp_if_include
        pytest -k "not test29" --pyargs amuse.test.suite.compile_tests.test_c_implementation -sv
      env:
        OMPI_MCA_rmaps_base_oversubscribe: 1
        OMPI_MCA_btl_tcp_if_include: lo

    - name: test code_tests
      run: |
        mpiexec -n 1 pytest --pyargs amuse.test.suite.codes_tests.test_bhtree -sv
        mpiexec -n 1 pytest --pyargs amuse.test.suite.codes_tests.test_sse -sv
      env:
        OMPI_MCA_rmaps_base_oversubscribe: 1
        OMPI_MCA_btl_tcp_if_include: lo
        OMPI_MCA_pmix_server_max_wait: 10
