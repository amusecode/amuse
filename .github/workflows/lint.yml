name: Lint

on: 
  push:
    branches:
      - main
      - updates/examples/textbook
  pull_request:
    branches:
      - main
      - updates/examples/textbook

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py-version }}
          architecture: ${{ matrix.py-arch }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt-get install gfortran libopenblas-dev libhdf5-openmpi-dev libgsl0-dev cmake libfftw3-3 libfftw3-dev libmpfr6 libmpfr-dev
          pip install numpy scipy matplotlib docutils mpi4py pytest pytest-timeout
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install amuse
        run: |
          pip install -e .
      - name: Install Python dependencies
        run: |
          python -m pip install pylint pycodestyle pydocstyle flake8

      #- name: Run linters
      #  uses: wearerequired/lint-action@v1
      #  with:
      #    flake8: true
      - name: Analysing the code with pylint
        run: |
          # pylint examples/textbook/*.py -r y --evaluation="max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10) )"
          pylint examples/textbook/*.py -r y --evaluation="max(0, 0 if fatal else 10.0 - ((float(5 * error + warning) / statement) * 10) )"
